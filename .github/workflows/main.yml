name: Terraform, AWS and Docker Workflow

on:
  push:
    branches:
      - main # You can change this to your desired branch

jobs:
  checkout-code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

  aws:
    runs-on: ubuntu-latest
    needs: checkout-code
    steps:
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.6.3 # Replace with the desired Terraform version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Create repository in ECR
        run: | 
          aws ecr describe-repositories --repository-names pw_ecr_dsop_webapp --region ${{ secrets.AWS_DEFAULT_REGION }} || aws ecr create-repository --repository-name pw_ecr_dsop_webapp --region ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Get ECR Repository URI
        run: |
          ECR_REPO_URI=$(aws ecr describe-repositories --repository-names pw_ecr_dsop_webapp --query "repositories[0].repositoryUri" --output text|cut -f1 -d"/")
          echo "ECR_REPO_URI=$ECR_REPO_URI" >> $GITHUB_ENV
          echo "ECR_REPO_URI: ${{ env.ECR_REPO_URI }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
      - name: AWS ECR Docker Login
        run: aws ecr get-login-password | docker login --username AWS --password-stdin ${{ env.ECR_REPO_URI }}
        env:
          ECR_REPO_URI: ${{ env.ECR_REPO_URI }}
  
  docker:
    runs-on: ubuntu-latest
    needs: 
      - checkout-code
      - aws
    steps:
      - name: Show ECR Repo URI
        run: | 
          # Use the ecr_repo_uri as needed
          echo "ECR Repository URI: ${{ needs.aws.outputs.ecr_repo_uri }}"

      - name: Build Docker Image
        run: docker build -t pw_ecr_dsop_webapp .

      - name: Tag docker image
        run: docker tag pw_ecr_dsop_webapp:latest ${{ needs.aws.outputs.ecr_repo_uri }}/pw_ecr_dsop_webapp:latest

      - name: Push docker image
        run: docker push ${{ needs.aws.outputs.ecr_repo_uri }}/pw_ecr_dsop_webapp:latest

  terraform:
    runs-on: ubuntu-latest
    needs: checkout-code
    steps:
      - name: Terraform Configurations
        run: |
          cd terraform
          cat <<EOF > terraform.tfvars
          aws_access_key = "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws_secret_key = "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws_region = "${{ secrets.AWS_DEFAULT_REGION }}"
          EOF

      - name: Terraform Init
        run: cd terraform && terraform init

      - name: Terraform Apply
        run: cd terraform && terraform apply -auto-approve
